/*
 * process-data-file-parser.h
 * Version 20160416
 * Written by Harry Wong (harryw1)
 */

////////////////////////////////////////////////////////////////////////////////
// Libraries. //////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#include <stdlib.h>

////////////////////////////////////////////////////////////////////////////////
// Constants ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#define INITIAL_SCHEDULED_PROCS_MAX_LEN 4
#define SCHEDULED_PROCS_MAX_LEN_GROW_FACTOR 2
#define LINE_MAX_LEN    100
#define TOKEN_DELIMITER " "
#define TOKENS_LEN      4

////////////////////////////////////////////////////////////////////////////////
// Data structures. ////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/* Data structure to hold information of a scheduled process. */
typedef struct scheduled_process_t
{
    int start_time;
    int process_id;
    int memory_size;
    int job_time;
} scheduled_process_t;

////////////////////////////////////////////////////////////////////////////////
// Function prototypes. ////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/* Allocate memory for and initialise a new scheduled process. */
scheduled_process_t *new_scheduled_process(int start_time, int process_id,
    int memory_size, int job_time);
/* Parse a file and create an array of scheduled processes. */
scheduled_process_t **parse_process_data_file(FILE *fp);
/* Print information about the scheduled process. */
void print_scheduled_process(scheduled_process_t *sp);
/* Print information about each scheduled process in the array. */
void print_scheduled_processes(scheduled_process_t *sps[]);
/* Free all memory allocated for scheduled processes. */
void free_scheduled_processes(scheduled_process_t *sps[]);
