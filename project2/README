COMP30023: Computer Systems
2016 Semester 1 Project 1
Written by Harry Wong (harryw1)


README

Run "make" to produce both server and client executables.

Run "make server" to produce server executable only.

Run "make client" to produce client executable only.

Run "./server [PortNo] [SecretCode]" to start the server. SecretCode can be omitted for server to generate a random
secret code for each connected client.

Run "./client [Host/ServerIPAddress] [PortNo]" to start the client.

As of today (2016-05-21), it is possible to compile and run both the server and client executables on
digitalis.eng.unimelb.edu.au and on my home machine (Ubuntu 15.10). The compiled client executable compiled on digitalis
was also able to run on dimefox.eng.unimelb.edu.au and nutmeg.eng.unimelb.edu.au.

However, should the executables fail to compile, attempt to use different CFLAGS for gcc in the Makefile. Currently, all
executables can be compiled with "-pthread -lnsl", but other possible required flags are -lpthread[s] and -lsocket.

When the server is running, it might output to stderr "read: Success" and "write: Broken pipe" when the client
unexpectedly terminates; this is the intended behaviour as written in message-helpers.c:37, message-helpers.c:55 and
message-helpers.c:69. Nothing is written to stdout and all server output is written to log.txt.

When the client is running, user input is prompted with "> ". Enter the guess of four capital characters (A, B, C, D, E
or/and F) without any spaces or other characters. Hit enter to send input. Avoid entering input longer than 150
characters.

To pipe in an input file to the client for testing, run "./client [Host/ServerIPAddress] [PortNo] < [TestFile]". The
test file should be a plaintext file with four characters per line. See test.txt as an example.
